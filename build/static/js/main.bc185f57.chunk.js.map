{"version":3,"sources":["ajouter.jsx","App.js","serviceWorker.js","index.js"],"names":["Calcul","props","initialFormState","id","a","b","c","_useState","useState","_useState2","Object","slicedToArray","user","setUser","handleInputChange","event","_event$target","target","name","value","objectSpread","defineProperty","react_default","createElement","onSubmit","preventDefault","inseredelta","document","getElementById","x1","x2","erreur","erreur1","erreur2","positif","isNaN","innerHTML","addUser","type","onChange","required","onClick","affichedelta","afficheracinedelta","entiera","parseInt","entierb","entierc","delta","Math","pow","doublesolution","zonetext1","zonetext2","zonetext3","racinedelta","sqrt","xprime","xsecond","className","App","users","setUsers","ajouter","length","concat","toConsumableArray","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc185f57.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\n\n\nconst Calcul = props => {\n\tconst initialFormState = { id: null, a: '', b: '', c: '' }\n\tconst [ user, setUser ] = useState(initialFormState)\n\n\tconst handleInputChange = event => {\n\t\tconst { name, value } = event.target\n\n\t\tsetUser({ ...user, [name]: value })\n  }\n\n  const delta = () => {\n    var inseredelta = document.getElementById('a')// id de delta\n    var x1 = document.getElementById('x1')\n    var x2 = document.getElementById('x2')\n    var positif = document.getElementById('solutionpositif')\n    var affichedelta =  document.getElementById('delta')\n    var afficheracinedelta = document.getElementById('racinedelta')\n\n\n    var entiera = parseInt(user.a)//l'indice a\n    var entierb = parseInt(user.b)//l'indice b  \n    var entierc = parseInt(user.c)//l'indice c\n\n    if(entiera===0){\n      x1.innerHTML = \"\"\n      x2.innerHTML = \"\"\n      affichedelta.innerHTML = \"\" \n      afficheracinedelta.innerHTML = \"\" \n      positif.innerHTML =\"\"                                                             \n      inseredelta.innerHTML = \"<span id='premierdegree'>L'équation devient une équation du premier degrée</span><br>\"+\n                              \"<span id='entierb'>\"+entierb+\"</span> x + <span id='entierc'>\" + entierc +\"</span> = 0\"\n    }\n    else{\n   \n    var delta = Math.pow(entierb,2) - 4 * ((entiera)* (entierc))// calcul delta\n\n    inseredelta.innerHTML = delta //inserer le delta\n      \n\n    if(delta<0){\n      inseredelta.innerHTML = \"<span id='negatif'>Δ est négatif donc <br>la solution est vide <br> S = { }</span>\"\n      x1.innerHTML = \"\"\n      x2.innerHTML = \"\" \n      positif.innerHTML =\"\" \n      affichedelta.innerHTML = \"\" \n      afficheracinedelta.innerHTML = \"\" \n    }\n    else if(delta===0){\n       x1.innerHTML = \"\"\n       x2.innerHTML = \"\"\n       positif.innerHTML =\"\"\n       affichedelta.innerHTML = \"\" \n       afficheracinedelta.innerHTML = \"\" \n      var doublesolution = - entierb / (2 * entiera) \n      affichedelta.innerHTML = \"Δ = \"+delta + \"<br>\"\n      inseredelta.innerHTML =  \"<span id=\\\"doublesolution\\\">Une Solution Unique<br> x<sub>1</sub>  = \"+doublesolution+\"<br> S = { \" + doublesolution + \" }</span>\"\n    }\n    else{\n      var zonetext1 = document.getElementById('zonetext1')\n      var zonetext2 = document.getElementById('zonetext2')\n      var zonetext3 = document.getElementById('zonetext3')\n\n      var erreur = document.getElementById('erreur')\n      var erreur1 = document.getElementById('erreur1')\n      var erreur2 = document.getElementById('erreur2')\n      inseredelta.innerHTML = \"\"\n        x1.innerHTML = \"\"\n        x2.innerHTML = \"\"\n        positif.innerHTML =\"\"\n        affichedelta.innerHTML = \"\" \n        afficheracinedelta.innerHTML = \"\"\n\n      if(zonetext1.value === \"\"){\n        var vide = document.getElementById('a')\n        vide.innerHTML = \"\"\n        if(zonetext2.value === \"\"){\n          erreur.innerHTML = \"Veuillez remplir le champ 1\"\n        }\n        if(zonetext3.value === \"\"){   \n          erreur1.innerHTML = \"Veuillez remplir le champ 2\"\n        }\n        if(zonetext3.value === \"\"){   \n          erreur2.innerHTML = \"Veuillez remplir le champ 3\"\n        }\n\n      }\n\n      else{\n      \n      var racinedelta = Math.sqrt(delta) // calcul racinedelta\n      var xprime = (-(entierb) + racinedelta) / (2 * entiera)\n      var xsecond = (-(entierb) - racinedelta) / (2 * entiera)\n\n\n      affichedelta.innerHTML = \"Δ = <span id='spandelta'>\"+delta + \"</span><br>\"\n      afficheracinedelta.innerHTML = \"√Δ = <span id='spandelta'>\"+racinedelta + \"</span><br>\"\n      inseredelta.innerHTML = \"<span id=\\\"deuxracine\\\">Deux racines  distincts x<sub>1</sub>,x<sub>2</sub><br></span>\"\n      x1.innerHTML = \"x<sub>1</sub> = \" + xprime\n      x2.innerHTML = \"x<sub>2</sub> = \" + xsecond + \"<br>\"\n      positif.innerHTML = \"<span id='solution'>S = { \"+ xprime + \" , \" + xsecond + \" }</span>\"\n\n      }\n\n    }\n  }\n}\n\n\treturn (\n\t\t<form\n\t\t\tonSubmit={event => {\n\t\t\t\tevent.preventDefault()\n        if (!user.a || !user.b || !user.c) return\n\n        var inseredelta = document.getElementById('a')// id de delta\n        var x1 = document.getElementById('x1')\n        var x2 = document.getElementById('x2')\n        var erreur = document.getElementById('erreur')\n        var erreur1 = document.getElementById('erreur1')\n        var erreur2 = document.getElementById('erreur2')\n        var positif = document.getElementById('solutionpositif')\n\n        if(isNaN(user.a)){\n          erreur.innerHTML = 'Entrer un nombre'\n          inseredelta.innerHTML = \"\"\n          x1.innerHTML = \"\"\n          x2.innerHTML =\"\"\n          positif.innerHTML = \"\"\n          \n        }\n        else if(isNaN(user.b)){\n          erreur1.innerHTML = 'Entrer un nombre'\n          inseredelta.innerHTML = \"\"\n          x1.innerHTML = \"\"\n          x2.innerHTML =\"\"\n          positif.innerHTML = \"\"\n        }\n        else if(isNaN(user.c)){\n          erreur2.innerHTML = 'Entrer un nombre'\n          inseredelta.innerHTML = \"\"\n          x1.innerHTML = \"\"\n          x2.innerHTML =\"\"\n          positif.innerHTML = \"\"\n        }\n      else{\n\t\t\t\t\tvar yes = document.getElementById('erreur')\n          yes.innerHTML = \"\";\n          var err1 = document.getElementById('erreur1')\n          err1.innerHTML = \"\";\n          var err2 = document.getElementById('erreur2')\n          err2.innerHTML = \"\";\n\t\t\t\t\tprops.addUser(user)\n          setUser(initialFormState)\t        \n\t\t\t}\n\t\t\t}}\n\t\t>\t\n\n          <table>\n            <tbody>\n              <tr>\n                <td><label id=\"nom\"><span id=\"indicea\">Indice a</span> &nbsp;&nbsp;</label></td>\n                <td><input id=\"zonetext1\" type=\"text\" name=\"a\" value={user.a} onChange={handleInputChange} required/>\n                <p id=\"erreur\"></p>\n                </td>\n              </tr>\n              <tr>\n                <td><label id=\"nom\"><span id=\"indicea\">Indice b</span> </label></td>\n                <td><input id=\"zonetext2\"type=\"text\" name=\"b\" value={user.b} onChange={handleInputChange} required/>\n                <p id=\"erreur1\"></p>\n                </td>\n              </tr>\n              <tr>\n                <td><label id=\"nom\"><span id=\"indicea\">indice c</span> </label></td>\n                <td><input type=\"text\" id=\"zonetext3\"  name=\"c\" value={user.c} onChange={handleInputChange} required/>\n                <p id=\"erreur2\"></p>\n                </td>\n              </tr>\n            </tbody>\n            </table>\n            <button id=\"boutton\" type=\"submit\" onClick={() => {delta()}} className=\"btn btn-primary btn-lg\">Calculer</button><br/><br/>\n            <h4 id=\"delta\"></h4>\n            <h4 id=\"racinedelta\"></h4>\n            <h4 id=\"a\"></h4>\n            <h6 id=\"x1\"></h6>\n            <h6 id=\"x2\"></h6>\n            <h6 id=\"solutionpositif\"></h6>\n    \n\t\t</form>\n\n\t)\n}\t\nexport default Calcul;","import React, { useState } from 'react' \nimport 'bootstrap/dist/css/bootstrap.css';\nimport Calcul from './ajouter'//fichier qui ajoute le formulaire d'ajout de produit\nimport './App.css';\n\nconst App = () => {\n  const usersData = [\n    \n  ]\n\n  const [users, setUsers] = useState(usersData)\n\n  const addUser = user => {\n\t\tuser.id = users.length\n\t\tsetUsers([ ...users, user ])\n  }\n\n  return (\n    <div className=\"container\">\n    <h1>\n      <center>EQUATION DU SECOND DEGREE<br/>\n        <span id=\"indice\">a</span><span id=\"spanx\">x</span><sup>2</sup><span id=\"spanx\"> + </span><span id=\"indice\">b</span><span id=\"spanx\">x + </span><span id=\"indice\">c</span><span id=\"spanx\"> = 0</span><br/>\n        <span id=\"titre\">Entrer les indices a , b et c pour voir la solution de l'equation.</span>\n      </center>\n    </h1>\n    <div className=\"row\">\n      <div className=\"col-md-4\"></div>\n      <div className=\"col-md-4\">\n\n      <center id=\"centrecalcul\">\n        <div className=\"flex-row\" id=\"calcul\">\n          <div className=\"flex-large\">\n      \n            <Calcul addUser={addUser} />\n        \n          </div><br></br>\n        </div>\n        </center> \n      </div>\n      <div className=\"col-md-4\"></div>\n      </div>\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}